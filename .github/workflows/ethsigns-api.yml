name: Ethsigns API

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
jobs:
  run-tests:
    name: Run Tests

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7.9
    - name: Cache Dependencies
      uses: actions/cache@v2
      id: cache-venv
      with:
        # This path is specific to Ubuntu
        path: ~/pip-env
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m venv ~/pip-env/
        source ~/pip-env/bin/activate
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        source ~/pip-env/bin/activate
        flake8 .

    - name: Test with pytest
      env:
        SQLALCHEMY_TRACK_MODIFICATIONS: "false"
        SECRET_KEY: very-secret-key
      run: |
        source ~/pip-env/bin/activate
        coverage run -m pytest

  # deploy:
  #   name: Deploy App
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Executing remote  command
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         password: ${{ secrets.PASSWORD }}
  #         port: ${{ secrets.PORT }}
  #         script: |
  #           cd ~/ethsigns
  #           git fetch
  #           git reset --hard origin/main
  #           export FLASK_APP=${{ secrets.FLASK_APP}}
  #           export DATABASE_URI=${{ secrets.DATABASE_URI}}
  #           export FLASK_ENV=${{ secrets.FLASK_ENV}}
  #           export SECRET_KEY='${{ secrets.SECRET_KEY}}'
  #           export DEBUG=False
  #           export SQLALCHEMY_TRACK_MODIFICATIONS='${{ secrets.SQLALCHEMY_TRACK_MODIFICATIONS}}'
  #           docker-compose build
  #           docker-compose up -d
  #   needs: [run-tests]
